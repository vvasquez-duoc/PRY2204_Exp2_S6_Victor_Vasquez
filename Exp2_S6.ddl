-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2024-09-16 22:49:50 CLST
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE automovil (
    patente          VARCHAR2(6 CHAR) NOT NULL,
    numero_puertas   INTEGER NOT NULL,
    es_4x4           NUMBER NOT NULL,
    es_automatico    NUMBER,
    tipo_combustible VARCHAR2(30 CHAR)
);

ALTER TABLE automovil ADD CONSTRAINT automovil_pk PRIMARY KEY ( patente );

CREATE TABLE camion (
    patente        VARCHAR2(6 CHAR) NOT NULL,
    numero_ejes    INTEGER NOT NULL,
    carga_maxima   INTEGER NOT NULL,
    tiene_remolque NUMBER
);

ALTER TABLE camion ADD CONSTRAINT camion_pk PRIMARY KEY ( patente );

CREATE TABLE cliente (
    rut       VARCHAR2(9 CHAR) NOT NULL,
    nombres   VARCHAR2(100 CHAR) NOT NULL,
    apellidos VARCHAR2(100 CHAR) NOT NULL,
    domicilio VARCHAR2(200 CHAR),
    telefono  VARCHAR2(20 CHAR) NOT NULL,
    email     VARCHAR2(100 CHAR)
);

ALTER TABLE cliente ADD CONSTRAINT cliente_pk PRIMARY KEY ( rut );

CREATE TABLE estado (
    idestado            INTEGER NOT NULL,
    descripcion         VARCHAR2(100 CHAR) NOT NULL,
    servicio_idservicio INTEGER
);

CREATE UNIQUE INDEX estado__idx ON
    estado (
        servicio_idservicio
    ASC );

ALTER TABLE estado ADD CONSTRAINT estado_pk PRIMARY KEY ( idestado );

CREATE TABLE motocicleta (
    patente    VARCHAR2(6 CHAR) NOT NULL,
    cilindrada INTEGER NOT NULL,
    tipo_motor VARCHAR2(30 CHAR)
);

ALTER TABLE motocicleta ADD CONSTRAINT motocicleta_pk PRIMARY KEY ( patente );

CREATE TABLE orden_atencion (
    idorden          INTEGER NOT NULL,
    fecha_ingreso    DATE NOT NULL,
    cliente_rut      VARCHAR2(9 CHAR) NOT NULL,
    vehiculo_patente VARCHAR2(6 CHAR) NOT NULL
);

ALTER TABLE orden_atencion ADD CONSTRAINT orden_atencion_pk PRIMARY KEY ( idorden,
                                                                          vehiculo_patente );

CREATE TABLE repuestos (
    idrepuesto          INTEGER NOT NULL,
    descripcion         VARCHAR2(100 CHAR) NOT NULL,
    cantidad            INTEGER NOT NULL,
    costo_unitario      INTEGER NOT NULL,
    servicio_idservicio INTEGER NOT NULL
);

ALTER TABLE repuestos ADD CONSTRAINT repuestos_pk PRIMARY KEY ( idrepuesto,
                                                                servicio_idservicio );

CREATE TABLE servicio (
    idservicio          INTEGER NOT NULL,
    descripcion         VARCHAR2(1000) NOT NULL,
    costo_mano_obra     INTEGER NOT NULL,
    estado_idestado     INTEGER,
    oa_idorden          INTEGER NOT NULL,
    oa_vehiculo_patente VARCHAR2(6 CHAR) NOT NULL
);

CREATE UNIQUE INDEX servicio__idx ON
    servicio (
        estado_idestado
    ASC );

ALTER TABLE servicio ADD CONSTRAINT servicio_pk PRIMARY KEY ( idservicio );

CREATE TABLE vehiculo (
    patente     VARCHAR2(6 CHAR) NOT NULL,
    marca       VARCHAR2(50 CHAR) NOT NULL,
    modelo      VARCHAR2(50 CHAR) NOT NULL,
    tipo        VARCHAR2(30 CHAR) NOT NULL,
    anno        INTEGER,
    color       VARCHAR2(50 CHAR),
    cliente_rut VARCHAR2(9 CHAR) NOT NULL
);

ALTER TABLE vehiculo ADD CONSTRAINT vehiculo_pk PRIMARY KEY ( patente );

ALTER TABLE automovil
    ADD CONSTRAINT automovil_vehiculo_fk FOREIGN KEY ( patente )
        REFERENCES vehiculo ( patente );

ALTER TABLE camion
    ADD CONSTRAINT camion_vehiculo_fk FOREIGN KEY ( patente )
        REFERENCES vehiculo ( patente );

ALTER TABLE estado
    ADD CONSTRAINT estado_servicio_fk FOREIGN KEY ( servicio_idservicio )
        REFERENCES servicio ( idservicio );

ALTER TABLE motocicleta
    ADD CONSTRAINT motocicleta_vehiculo_fk FOREIGN KEY ( patente )
        REFERENCES vehiculo ( patente );

ALTER TABLE orden_atencion
    ADD CONSTRAINT orden_atencion_cliente_fk FOREIGN KEY ( cliente_rut )
        REFERENCES cliente ( rut );

ALTER TABLE orden_atencion
    ADD CONSTRAINT orden_atencion_vehiculo_fk FOREIGN KEY ( vehiculo_patente )
        REFERENCES vehiculo ( patente );

ALTER TABLE repuestos
    ADD CONSTRAINT repuestos_servicio_fk FOREIGN KEY ( servicio_idservicio )
        REFERENCES servicio ( idservicio );

ALTER TABLE servicio
    ADD CONSTRAINT servicio_estado_fk FOREIGN KEY ( estado_idestado )
        REFERENCES estado ( idestado );

ALTER TABLE servicio
    ADD CONSTRAINT servicio_orden_atencion_fk FOREIGN KEY ( oa_idorden,
                                                            oa_vehiculo_patente )
        REFERENCES orden_atencion ( idorden,
                                    vehiculo_patente );

ALTER TABLE vehiculo
    ADD CONSTRAINT vehiculo_cliente_fk FOREIGN KEY ( cliente_rut )
        REFERENCES cliente ( rut );

CREATE OR REPLACE TRIGGER arc_arco_tipo_vehi_motocicleta BEFORE
    INSERT OR UPDATE OF patente ON motocicleta
    FOR EACH ROW
DECLARE
    d VARCHAR2(30 CHAR);
BEGIN
    SELECT
        a.tipo
    INTO d
    FROM
        vehiculo a
    WHERE
        a.patente = :new.patente;

    IF ( d IS NULL OR d <> 'MOTOCICLETA' ) THEN
        raise_application_error(
                               -20223,
                               'FK MOTOCICLETA_VEHICULO_FK in Table MOTOCICLETA violates Arc constraint on Table VEHICULO - discriminator column tipo doesn''t have value ''MOTOCICLETA'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_arco_tipo_vehicu_automovil BEFORE
    INSERT OR UPDATE OF patente ON automovil
    FOR EACH ROW
DECLARE
    d VARCHAR2(30 CHAR);
BEGIN
    SELECT
        a.tipo
    INTO d
    FROM
        vehiculo a
    WHERE
        a.patente = :new.patente;

    IF ( d IS NULL OR d <> 'AUTOMOVIL' ) THEN
        raise_application_error(
                               -20223,
                               'FK AUTOMOVIL_VEHICULO_FK in Table AUTOMOVIL violates Arc constraint on Table VEHICULO - discriminator column tipo doesn''t have value ''AUTOMOVIL'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_arco_tipo_vehiculo_camion BEFORE
    INSERT OR UPDATE OF patente ON camion
    FOR EACH ROW
DECLARE
    d VARCHAR2(30 CHAR);
BEGIN
    SELECT
        a.tipo
    INTO d
    FROM
        vehiculo a
    WHERE
        a.patente = :new.patente;

    IF ( d IS NULL OR d <> 'CAMION' ) THEN
        raise_application_error(
                               -20223,
                               'FK CAMION_VEHICULO_FK in Table CAMION violates Arc constraint on Table VEHICULO - discriminator column tipo doesn''t have value ''CAMION'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             9
-- CREATE INDEX                             2
-- ALTER TABLE                             19
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
